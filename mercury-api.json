{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Mercury API",
        "description": "Платформа Mercury -  электронный сервис для интернет-магазинов по увеличению продаж путем предоставления покупателям возможности оплаты покупок на условиях отсрочки и рассрочки суммы покупки («Купи сейчас, оплати потом»)\n\n## Limits\nN/A\n\n## Deleting Objects\nWe do our best to have all our URLs be\n[RESTful](http://en.wikipedia.org/wiki/Representational_state_transfer).\nEvery endpoint (URL) may support one of four different http verbs. GET\nrequests fetch information about an object, POST requests create objects,\nPUT requests update objects, and finally DELETE requests will delete\nobjects.\n\n## Structure\n\n### Events\nWhole system is built around events. All events must follow the next structure and conventions\n```json\n  {\n    \"type\": \"user-registered\", //event type\n    \"data\": {\n      \"meta\": {\n        \"created_at\": \"2016-10-12T00:00:01Z\", // Event creation date \n                                              //In case this event were generated \n                                              //on the client, client should provide it\n        \"saved_at\": \"2016-10-12T00:00:02Z\",   // Event save to DB date\n        \"source\": \"order-context-customer\",   //source of the event \n        \"correlation_id\": \"13545a41-4a8f-49ff-9f1d-7db31d4ac06d\" //id of correlation model\n      },\n      \"payload\": {\n        ...\n      }\n    }\n  }\n```\nThe `payload` is dependant on the concrete event type. In most of the cases it's quite intuitive\n\n### The Envelope\nEvery response is contained by an envelope. That is, each response has a\npredictable set of keys with which you can expect to interact:\n```json\n{\n    \"meta\": {\n        \"code\": 200\n    },\n    \"data\": {\n        ...\n    },\n    \"pagination\": {\n        \"next_url\": \"...\"|null,\n        \"prev_url\": \"...\"|null\n    }\n}\n```\n\n#### META\nThe meta key is used to communicate extra information about the response to\nthe developer. If all goes well, you'll only ever see a code key with value\n200. However, sometimes things go wrong, and in that case you might see a\nresponse like:\n```json\n{\n    \"meta\": {\n        \"error_type\": \"OAuthException\",\n        \"code\": 400,\n        \"error_message\": \"...\"\n    }\n}\n```\n\n#### DATA\nThe data key is the meat of the response. It may be a list or dictionary,\nbut either way this is where you'll find the data you requested.\n#### PAGINATION\nSometimes you just can't get enough. For this reason, we've provided a\nconvenient way to access more data in any request for sequential data.\nSimply call the url in the next_url parameter and we'll respond with the\nnext set of data.\n```json\n{\n    ...\n    \"pagination\": {\n        \"next_url\": \"https://api.instagram.com/v1/tags/puppy/media/recent?access_token=fb2e77d.47a0479900504cb3ab4a1f626d174d2d&max_id=13872296\"\n    }\n}\n```\n"
    },
    "host": "api.mercury.com",
    "basePath": "/v1",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Orders",
            "description": "Order API covers all necessary methods to implement order management functionality for e-shops and users. Order can have following statuses :\n* **CREATED** - an order were created during this session\n* **WAITING_VERIFICATION** - customer didn't very both - phone and email\n* **WAITING_PHONE_VERIFICATION** - customer verified email but not phone. So waiting for phone verification\n* **WAITING_EMAIL_VERIFICATION** - customer verified phone but not e-mail. So waiting for email verification\n* **CUSTOMER_VERIFIED** - customer verified both - phone and email\n* **CUSTOMER_FORM_COLLECTED** - customer finished filling the form\n* **CUSTOMER_QUIT** - customer left form uncomplete\n* **PROCESSING** - processing workflow has been started\n* **CANCELLED** - order were canceled by customer\n* **DECLINED_BY_SHOP** - order were declined on the e-shops's side\n* **DECLINED_BY_CO** - order were declined by Credit Organization\n* **APPROVED** - order were approved by all the sides\n* **PAYED** - e-shop got money for this order\n* **SHIPPED** - customer got items from the order\n"
        },
        {
            "name": "Requests",
            "description": "Request is a model to send to Credit Organizations. The main magic of an application happens here. Statuses:\n  * **CREATED**\n  * **MATCHING_CO**\n  * **NO_MATCHES**\n  * **PROCESSING**\n  * **DECLINED**\n  * **WAITING_FOR_CUSTOMER**\n  * **CUSTOMER_APPROVED**\n  * **E-SHOP_APPROVED**\n  * **E-SHOP_DECLINED**\n  * **TIMEOUT**\n  * **SHIPPING**\n  * **SHPPED**\n  * **CLOSED**\n  \n"
        },
        {
            "name": "CreditContracts",
            "description": "Credit contract represent a contract signed between Credit Organization and Customer, or between Mercudy system and customer\n"
        }
    ],
    "securityDefinitions": {
        "key": {
            "type": "apiKey",
            "name": "Bearer",
            "in": "header",
            "description": "JWT token. Note that we use JWT in all the cases:\n  * To authenticate Customer\n  * To authenticate Credit Organization\n  * To authenticate E-Shop\n  * To authenticate Private API calls\n  * To authenticate 3rd Party Software\n\n  In order to achieve this we have to create authentication microservice.\n"
        }
    },
    "paths": {
        "/order": {
            "get": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "WAITING_VERIFICATION",
                            "WAITING_PHONE_VERIFICATION",
                            "WAITING_EMAIL_VERIFICATION",
                            "CUSTOMER_VERIFIED",
                            "CUSTOMER_FORM_COLLECTED",
                            "CUSTOMER_QUIT",
                            "PROCESSING",
                            "CANCELLED",
                            "DECLINED_BY_SHOP",
                            "APPROVED",
                            "PAYED",
                            "SHIPPED"
                        ]
                    },
                    {
                        "name": "created_at",
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "updated_at",
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "customer_email",
                        "type": "string",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "description": "List orders for the authenticated shop\\CO\\Customer",
                "responses": {
                    "200": {
                        "description": "List of orders that matches request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MercuryOrder"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "description": "Push event related to this order. Note, that you can push any event\n  described next in this doc. which name matches the following pattern: `Order*Event`. You should provide JWT token in order to perform this action. Server will autorize requests using JWT's\n",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderCustomerInputEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer input saved event with the saved_at and id keys in meta property",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/OrderCustomerInputEvent"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "description": "Cancel order",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content except meta-information would be returned",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/start": {
            "post": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StartSessionEvent"
                        }
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "description": "Starts new session in the system. We use sessions in order to keep on track user activities in the system based on the concrete shop, order and behaviour.",
                "responses": {
                    "200": {
                        "description": "Created Start Session event with the saved_at and id keys in meta property",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/StartSessionEvent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/placeOrder": {
            "post": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "description": "Finally, force creation of the Order in the system",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderCustomerInputEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created order response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/MercuryOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/requests": {
            "get": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Orders",
                    "Requests"
                ],
                "description": "List Requests created for order specified",
                "responses": {
                    "200": {
                        "description": "List of Requests to CO attached to this order",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Request"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/request": {
            "post": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Requests"
                ],
                "description": "Create Request",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MercuryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created request Entity",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/MercuryRequest"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Requests"
                ],
                "description": "Get the list of requests by params specified",
                "responses": {
                    "200": {
                        "description": "An array of requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MercuryRequest"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/request/{request_id}": {
            "put": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Requests"
                ],
                "description": "Push event to corresponding request",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MercuryRequest"
                        }
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "type": "string",
                        "description": "Id of the MercuryRequest entity",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated request Entity",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/MercuryRequest"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "key": []
                    }
                ],
                "tags": [
                    "Requests"
                ],
                "description": "Get the MercuryRequest entity",
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "path",
                        "type": "string",
                        "description": "Id of the MercuryRequest entity",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MercuryRequest",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/MercuryRequest"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "EventMeta": {
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "correlation_id": {
                    "type": "string"
                }
            }
        },
        "StartSessionEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object",
                            "properties": {
                                "order": {
                                    "$ref": "#/definitions/Order"
                                },
                                "customer": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "customer_token": {
                                    "type": "string",
                                    "description": "customer_token is used to sign future requests in order to authenticate user requests and attach events to this user."
                                }
                            }
                        }
                    }
                }
            }
        },
        "OrderCustomerInputEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object",
                            "properties": {
                                "customer": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "session_id": {
                                    "type": "string",
                                    "description": "ID of session"
                                }
                            }
                        }
                    }
                }
            }
        },
        "UserChangedEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object",
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/Address"
                                },
                                "session_id": {
                                    "type": "string",
                                    "description": "ID of session"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "JWT of authorized shop contract"
                                }
                            }
                        }
                    }
                }
            }
        },
        "Order": {
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "order_amount": {
                    "type": "number"
                },
                "order_tax_amount": {
                    "type": "number"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItem"
                    }
                }
            }
        },
        "OrderCustomerVerifyPhoneEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderCustomerVerifyEmailEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderCustomerAcceptEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderCustomerCancelEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderShopAcceptEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderShopCancelEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderShopShippedEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderCOAcceptEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderCOCancelEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderMercuryApproveEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderMercuryPayEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderMercuryDeclineEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "OrderItem": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                }
            }
        },
        "MercuryRequest": {
            "description": "Mercury request is a request which exists only in Mercury system and used to create\nCO-specific requests. We need that because different CO's require different data to make decisions.<br/>\n  Available statuses: <br/>\n    * CREATED<br/>\n    * MATCHING_CO<br/>\n    * NO_MATCHES<br/> \n    * PROCESSING<br/>\n    * DECLINED<br/>\n    * WAITING_FOR_CUSTOMER<br/>\n    * CUSTOMER_APPROVED<br/>\n    * E-SHOP_APPROVED<br/>\n    * E-SHOP_DECLINED<br/>\n    * TIMEOUT<br/>\n    * SHIPPING<br/>\n    * SHPPED<br/>\n    * CLOSED<br/>\n",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "requested_amount": {
                    "type": "number"
                },
                "shop_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "CREATED",
                        "MATCHING_CO",
                        "NO_MATCHES",
                        "PROCESSING",
                        "DECLINED",
                        "WAITING_FOR_CUSTOMER",
                        "CUSTOMER_APPROVED",
                        "E-SHOP_APPROVED",
                        "E-SHOP_DECLINED",
                        "TIMEOUT",
                        "SHIPPING",
                        "SHPPED",
                        "CLOSED"
                    ]
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Request"
                    }
                }
            }
        },
        "Request": {
            "type": "object",
            "description": "Request is an object specific to each Credit Organization as they require different set\nof fields to make decisions. We will map MercuryRequests to specific Requests in\norder to be able to work with different Credit Organizations and make integrations with new\nCO's easier\n"
        },
        "RequestEvent": {
            "description": "Event related to request",
            "properties": {
                "type": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "meta": {
                            "$ref": "#/definitions/EventMeta"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "RequestVerifiedEvent": {
            "type": "object"
        },
        "RequestDeclinedEvent": {
            "type": "object"
        },
        "RequestMercuryProcessingStartedEvent": {
            "type": "object"
        },
        "RequestCOProcessingStartedEvent": {
            "type": "object"
        },
        "MercuryOrderItem": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "shop_category_id": {
                    "type": "string"
                }
            }
        },
        "MercuryOrder": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string",
                    "description": "An identifier of order in Mercury"
                },
                "redirect_url": {
                    "type": "string"
                },
                "shop_order_id": {
                    "type": "string"
                },
                "order_tax_amount": {
                    "type": "number"
                },
                "order_amount": {
                    "type": "number"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MercuryOrderItem"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "CREATED"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Customer": {
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Document"
                    }
                },
                "addresses": {
                    "$ref": "#/definitions/CustomerAddresses"
                },
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "Document": {
            "properties": {
                "series": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "issued_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "issue_unit_name": {
                    "type": "string"
                },
                "issue_unit_code": {
                    "type": "string"
                }
            }
        },
        "Address": {
            "type": "object"
        },
        "CustomerAddresses": {
            "properties": {
                "shipping_address": {
                    "$ref": "#/definitions/Address"
                },
                "registration_address": {
                    "$ref": "#/definitions/Address"
                },
                "fact_address": {
                    "$ref": "#/definitions/Address"
                },
                "billing_address": {
                    "$ref": "#/definitions/Address"
                }
            }
        }
    }
}